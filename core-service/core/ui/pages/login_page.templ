package pages

import "github.com/alekLukanen/go-templ-htmx-example-app/core/ui/components"

type LoginInputFormParams struct {
	Email                string
	Password             string
	ShowFailedLoginFlag  bool
	SubmitButtonDisabled bool
}

func (obj *LoginInputFormParams) FormAppearsValid() bool {
	allValid := (!obj.ShowFailedLoginFlag)
	return allValid
}

templ LoginPage(loginFormParams LoginInputFormParams) {
	@components.Base() {
		@components.HomepageTopNav(true)
		<div class="w-screen h-screen bg-gradient-to-r from-slate-200 to-gray-200">
			<div class="w-screen h-screen flex justify-center items-center">
				<div class="w-full h-fit sm:max-w-xs md:max-w-sm lg:max-w-sm">
					@LoginInputForm(loginFormParams)
					<p class="text-center text-slate-300 text-s">
						&copy;2024 "Company name here...". All rights reserved.
					</p>
				</div>
			</div>
		</div>
	}
}

templ LoginInputForm(params LoginInputFormParams) {
	<form
		class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4"
		id="login-input-form"
		hx-post="/login/submit"
		hx-swap="outerHTML"
		hx-target="this"
	>
		@LoginInputFormContent(params)
	</form>
}

templ LoginInputFormContent(params LoginInputFormParams) {
	<div class="w-full max-w-xs" id="login-input-form-content">
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="email">
				Email
			</label>
			<input
				class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
				id="email"
				type="email"
				placeholder="email"
				value={ params.Email }
				name="email"
				hx-trigger="keyup delay:500ms"
				hx-post="/login/validate-inputs"
				hx-sync="closest form:abort"
				hx-swap="outerHTML"
				hx-target="next button"
			/>
		</div>
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="password">
				Password
			</label>
			<input
				class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
				id="password"
				type="password"
				placeholder="****"
				name="password"
				value={ params.Password }
				hx-trigger="keyup delay:500ms"
				hx-post="/login/validate-inputs"
				hx-sync="closest form:abort"
				hx-swap="outerHTML"
				hx-target="next button"
			/>
		</div>
		@LoginInputFormFailedLoginMessage(params)
		<div class="mt-6 flex items-center justify-between">
			@components.Button("Login", params.SubmitButtonDisabled)
			<a class="inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800" href="/signup">
				Create an account
			</a>
		</div>
	</div>
}

templ LoginInputFormFailedLoginMessage(params LoginInputFormParams) {
	<div>
		if (params.ShowFailedLoginFlag) {
			<p class="text-red-500 text-xs italic">Invalid email or password</p>
		}
	</div>
}
